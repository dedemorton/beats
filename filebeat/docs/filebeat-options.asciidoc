[id="configuration-{beatname_lc}-options"]
== Configure inputs

++++
<titleabbrev>Configure inputs</titleabbrev>
++++

TIP: <<{beatname_lc}-modules-overview,{beatname_uc} modules>> provide the
fastest getting started experience for common log formats. See
<<{beatname_lc}-modules-quickstart>> to learn how to get started with modules.
Also see <<configuration-{beatname_lc}-modules>> for information about enabling
and configuring modules.

To configure {beatname_uc} manually (instead of using
<<{beatname_lc}-modules-overview,modules>>), you specify a list of inputs in the
+{beatname_lc}.inputs+ section of the +{beatname_lc}.yml+. Inputs specify how
{beatname_uc} locates and processes input data.  

The list is a http://yaml.org/[YAML] array, so each input begins with
a dash (`-`). You can specify multiple inputs, and you can specify the same
input type more than once. For example:

["source","yaml",subs="attributes"]
----
filebeat.inputs:
- type: log
  paths:
    - /var/log/system.log
    - /var/log/wifi.log
- type: log
  paths:
    - "/var/log/apache2/*"
  fields:
    apache: true
  fields_under_root: true
----


//REVIEWERS: I'm using the same example here that's used in the topic about the
//log input. I wonder if we have a better one that shows a couple of different
//input types?

[float]
[[input-type]]
=== Input types

You can configure {beatname_uc} to use the following inputs:

// REVIWERS: I would like to make the following list generated, if possible. Can
// we reuse the logic that we use for generating the modules list?

* <<log-input>>
* <<stdin-input>>
* <<redis-input>>
* <<udp-input>>
* <<docker-input>>



include::./log-input.asciidoc[]

include::./stdin-input.asciidoc[]

include::./redis-input.asciidoc[]

include::./udp-input.asciidoc[]

include::./docker-input.asciidoc[]
