:type: docker

[id="{beatname_lc}-input-{type}"]
=== Docker input

++++
<titleabbrev>Docker</titleabbrev>
++++

experimental[]

Use the `docker` input to read logs from Docker containers. 

This input searches for container logs under its path, and parse them into
common message lines, extracting timestamps too. Everything happens before line
filtering, multiline, and JSON decoding, so this input can be used in
combination with those settings.

Example configuration:

["source","yaml",subs="attributes"]
----
{beatname_lc}.inputs:
- type: docker
  containers.ids: <1>
    - '8b6fe7dc9e067b58476dc57d6986dd96d7100430c5de3b109a99cd56ac655347'
----

<1> `containers.ids` is required. All other settings are optional.

==== Configuration options

The `docker` input supports the following configuration options plus the
<<{beatname_lc}-input-{type}-common-options>> described later.

[[config-container-ids]]
===== `containers.ids`

The list of Docker container IDs to read logs from. Specify
`containers.ids: '*'` to read from all containers.

===== `containers.paths`

The base path where Docker logs are located. The default
is `/var/lib/docker/containers`.

// REVIEWERS: Not clear to me if this setting accepts an array or a string. If
// it's just a string, why is it paths (plural)?

===== `containers.stream`

Reads from the specified streams only: `all`, `stdout` or `stderr`. The default
is `all`.

The following input configures {beatname_uc} to read the `stdout` stream from
all containers under the default Docker containers path:

[source,yaml]
----
- type: docker
  containers:
    paths: "/var/lib/docker/containers"
    stream: "stdout"
    ids:
      - "*"
----

include::../inputs/input-common-harvester-options.asciidoc[]

include::../inputs/input-common-file-options.asciidoc[]

[id="{beatname_lc}-input-{type}-common-options"]
include::../inputs/input-common-options.asciidoc[]

:type!:
